use device_query::{Keycode as DqKey};
use enigo::{Key as EnigoKey};

pub struct KeyboardMapper {}

impl KeyboardMapper {
    pub fn dq_to_enigo(key_in_dq: DqKey) -> Option<EnigoKey> {
        match key_in_dq {
            // F1-F12
            DqKey::F1 => Some(EnigoKey::F1),
            DqKey::F2 => Some(EnigoKey::F2),
            DqKey::F3 => Some(EnigoKey::F3),
            DqKey::F4 => Some(EnigoKey::F4),
            DqKey::F5 => Some(EnigoKey::F5),
            DqKey::F6 => Some(EnigoKey::F6),
            DqKey::F7 => Some(EnigoKey::F7),
            DqKey::F8 => Some(EnigoKey::F8),
            DqKey::F9 => Some(EnigoKey::F9),
            DqKey::F10 => Some(EnigoKey::F10),
            DqKey::F11 => Some(EnigoKey::F11),
            DqKey::F12 => Some(EnigoKey::F12),
            // 0-9
            DqKey::Key0 => Some(EnigoKey::Layout('0')),
            DqKey::Key1 => Some(EnigoKey::Layout('1')),
            DqKey::Key2 => Some(EnigoKey::Layout('2')),
            DqKey::Key3 => Some(EnigoKey::Layout('3')),
            DqKey::Key4 => Some(EnigoKey::Layout('4')),
            DqKey::Key5 => Some(EnigoKey::Layout('5')),
            DqKey::Key6 => Some(EnigoKey::Layout('6')),
            DqKey::Key7 => Some(EnigoKey::Layout('7')),
            DqKey::Key8 => Some(EnigoKey::Layout('8')),
            DqKey::Key9 => Some(EnigoKey::Layout('9')),
            // A-Z
            DqKey::A => Some(EnigoKey::Layout('A')),
            DqKey::B => Some(EnigoKey::Layout('B')),
            DqKey::C => Some(EnigoKey::Layout('C')),
            DqKey::D => Some(EnigoKey::Layout('D')),
            DqKey::E => Some(EnigoKey::Layout('E')),
            DqKey::F => Some(EnigoKey::Layout('F')),
            DqKey::G => Some(EnigoKey::Layout('G')),
            DqKey::H => Some(EnigoKey::Layout('H')),
            DqKey::I => Some(EnigoKey::Layout('I')),
            DqKey::J => Some(EnigoKey::Layout('J')),
            DqKey::K => Some(EnigoKey::Layout('K')),
            DqKey::L => Some(EnigoKey::Layout('L')),
            DqKey::M => Some(EnigoKey::Layout('M')),
            DqKey::N => Some(EnigoKey::Layout('N')),
            DqKey::O => Some(EnigoKey::Layout('O')),
            DqKey::P => Some(EnigoKey::Layout('P')),
            DqKey::Q => Some(EnigoKey::Layout('Q')),
            DqKey::R => Some(EnigoKey::Layout('R')),
            DqKey::S => Some(EnigoKey::Layout('S')),
            DqKey::T => Some(EnigoKey::Layout('T')),
            DqKey::U => Some(EnigoKey::Layout('U')),
            DqKey::V => Some(EnigoKey::Layout('V')),
            DqKey::W => Some(EnigoKey::Layout('T')),
            DqKey::X => Some(EnigoKey::Layout('X')),
            DqKey::Y => Some(EnigoKey::Layout('Y')),
            DqKey::Z => Some(EnigoKey::Layout('Z')),
            // from left to right, from top to bottom
            DqKey::Escape => Some(EnigoKey::Escape),
            DqKey::Tab => Some(EnigoKey::Tab),
            DqKey::CapsLock => Some(EnigoKey::CapsLock),
            DqKey::LShift | DqKey::RShift => Some(EnigoKey::Shift),
            DqKey::LControl | DqKey::RControl => Some(EnigoKey::Control),
            DqKey::Meta => Some(EnigoKey::Meta),
            DqKey::LAlt | DqKey::RAlt => Some(EnigoKey::Alt),
            DqKey::Space => Some(EnigoKey::Space),
            DqKey::Up => Some(EnigoKey::UpArrow),
            DqKey::Right => Some(EnigoKey::RightArrow),
            DqKey::Down => Some(EnigoKey::DownArrow),
            DqKey::Left => Some(EnigoKey::LeftArrow),
            DqKey::Enter => Some(EnigoKey::Return),
            DqKey::Backspace => Some(EnigoKey::Backspace),
            // DqKey::Insert => None,
            DqKey::Delete => Some(EnigoKey::Delete),
            DqKey::Home => Some(EnigoKey::Home),
            DqKey::PageUp => Some(EnigoKey::PageUp),
            DqKey::PageDown => Some(EnigoKey::PageDown),
            DqKey::End => Some(EnigoKey::End),
            // maybe incorrect, but does correct in typing
            DqKey::Grave => Some(EnigoKey::Layout('`')),
            DqKey::Minus => Some(EnigoKey::Layout('-')),
            DqKey::Equal => Some(EnigoKey::Layout('=')),
            DqKey::LeftBracket => Some(EnigoKey::Layout('[')),
            DqKey::RightBracket => Some(EnigoKey::Layout(']')),
            DqKey::Comma => Some(EnigoKey::Layout(',')),
            DqKey::Dot => Some(EnigoKey::Layout('.')),
            DqKey::Semicolon => Some(EnigoKey::Layout(';')),
            DqKey::Apostrophe => Some(EnigoKey::Layout('\'')),
            DqKey::Slash => Some(EnigoKey::Layout('/')),
            DqKey::BackSlash => Some(EnigoKey::Layout('\\')),
            // belows have no exact target in Enigo but can also use in typing
            DqKey::Numpad0 => Some(EnigoKey::Layout('0')),
            DqKey::Numpad1 => Some(EnigoKey::Layout('1')),
            DqKey::Numpad2 => Some(EnigoKey::Layout('2')),
            DqKey::Numpad3 => Some(EnigoKey::Layout('3')),
            DqKey::Numpad4 => Some(EnigoKey::Layout('4')),
            DqKey::Numpad5 => Some(EnigoKey::Layout('5')),
            DqKey::Numpad6 => Some(EnigoKey::Layout('6')),
            DqKey::Numpad7 => Some(EnigoKey::Layout('7')),
            DqKey::Numpad8 => Some(EnigoKey::Layout('8')),
            DqKey::Numpad9 => Some(EnigoKey::Layout('9')),
            DqKey::NumpadAdd => Some(EnigoKey::Layout('+')),
            DqKey::NumpadMultiply => Some(EnigoKey::Layout('-')),
            _ => None
        }
    }
}